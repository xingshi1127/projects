# Uses Global Temperature Time Series, avalaible at
# http://data.okfn.org/data/core/global-temp, stored in the file monthly.csv,
# assumed to be stored in the working directory.
# Prompts the user for the source, a range of years, and a month.
# - The source is either GCAG or GISTEMP.
# - The range of years is of the form xxxx--xxxx, and both years can be the same,
#   or the first year can be anterior to the second year,
#   or the second year can be anterior to the first year.
# - The month is a two digit number.
# We assume that the input is correct and the data for the requested month
# exist for all years in the requested range.
# Then outputs:
# - The average of the values for that source, for this month, for those years.
# - The list of years (in increasing order) for which the value is larger than that average.
# 



import sys
import os
import csv


filename = 'monthly.csv'
if not os.path.exists(filename):
    print('There is no file named {} in the working directory, giving up...'.format(filename))
    sys.exit()

source = input('Enter the source (GCAG or GISTEMP): ')
range_for_the_years = input('Enter a range for the years in the form XXXX--XXXX: ')
month = input('Enter a month in the form of a 2-digit number: ')
average = 0
years_above_average = []
dic = {}
temp = []
yearlist = []
yearlist = range_for_the_years.split('--')
mon = int(month)
sumlist = []
final = []
for i in range(2):
    yearlist[i] = int(yearlist[i])
if yearlist[0] > yearlist[1]:
    yearlist = [yearlist[1],yearlist[0]]
with open(filename) as csvfile:
    file = csvfile.readlines()
    file.pop(0)
    for i in range(len(file)):
        file[i] = file[i].replace('\n','').split(',')
        temp = file[i][1].split('-')
        dic[(file[i][0],int(temp[0]),int(temp[1]))] = float(file[i][2])
    for _ in range(yearlist[0],yearlist[1]+1):
        for j in dic:    
            if (source,_,mon) == j:
                final.append(_)
                sumlist.append(dic[j])
    average = sum(sumlist)/len(sumlist)
    years_above_average= [x for x in final if dic[(source,x,mon)] > average]  

        

print('The average anomaly for this month of those years is: {:.2f}.'.format(average))
print('The list of years when the temperature anomaly was above average is:')
print(years_above_average)
